Problem:
Time Complexity: O(n) where n is the length of larger string
Auxillary Space: O(1)
Code:
 char value(int n)
    {
        if(n) return '1';
        return '0';
    }
    int getcarry(int a,int b,int carry)
    {
        if(carry==0) return a&b;
        else if(a==0&&b==0) return 0;
        return 1;
    }
    string adBin(string a,string b)
    {
        int ca,cb,carry=0;
        string ans(b.length(),' ');
        int al=a.length(),bl=b.length();
        for(int i=1;i<=b.length();i++)
        {
            if((al-i)>=0)
            {
                  
                ca=a[a.length()-i]-48;
            }
            else
            {
                ca=0;
            }
            cb=b[bl-i]-48;
            ans[bl-i]=value(ca^cb^carry);
            carry=getcarry(ca,cb,carry);
        }
        if(carry==1)
            ans="1"+ans;
        return ans;
    }
    string addBinary(string a, string b) {
        if(a.length()<=b.length())
        {
            return adBin(a,b);
        }
            return adBin(b,a);
    }