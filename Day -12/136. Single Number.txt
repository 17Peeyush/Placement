Problem: https://leetcode.com/problems/single-number/
Time Complexity: O(n)
Auxillary Space: O(n)
Code:
 int singleNumber(vector<int>& nums) {
        int single=0;
        for(auto x: nums)
        {
            single^=x;
        }
        return single;
    }

 int singleNumber(vector<int>& nums) {
        int n=nums.size();
        unordered_map<int,int>mp;
       for(int i=0;i<n;i++)
       {
           mp[nums[i]]++;
       }
        for(auto x:mp)
        {
            if(x.second==1)
                return x.first;
        }
        return -1;
    }